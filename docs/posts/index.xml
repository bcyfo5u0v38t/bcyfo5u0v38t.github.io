<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on &#39;bcyfo5u0v38t&#39;s Blog&#39;</title>
    <link>https://bcyfo5u0v38t.github.io/posts/</link>
    <description>Recent content in Posts on &#39;bcyfo5u0v38t&#39;s Blog&#39;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Jul 2022 18:00:46 +0800</lastBuildDate><atom:link href="https://bcyfo5u0v38t.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>搭建MCDR加Fabric我的世界1.19服务器(Arch Linux)</title>
      <link>https://bcyfo5u0v38t.github.io/posts/build_a_mcdr_plus_fabric_minecraft_server/</link>
      <pubDate>Sun, 17 Jul 2022 18:00:46 +0800</pubDate>
      
      <guid>https://bcyfo5u0v38t.github.io/posts/build_a_mcdr_plus_fabric_minecraft_server/</guid>
      <description>第一步:配置环境 安装JDK Python pip
paru -S --needed liberica-jdk-full-bin python pip
安装MCDR
pip install mcdreforged
第二步:搭建原版服务端 创建MC/server文件夹
mkdir -p MC/server
进入MC/server文件夹
cd MC/server
从麻将官网下载原版服务端
curl https://launcher.mojang.com/v1/objects/e00c4052dac1d59a1188b2aa9d5a87113aaf1122/server.jar
运行服务端
java -jar server.jar nogui
此时会报错一次 修改文件夹中的eula.txt文件 将其内容改为
eula=false
再次运行服务端
java -jar server.jar nogui
出现Done说明服务器搭建成功
输入stop停止服务器
可以通过server.properties文件对服务器进行一些配置
第三步:搭建Fabric服务端 从Fabric官网下载Fabric服务端
curl -OJ https://meta.fabricmc.net/v2/versions/loader/1.19/0.14.8/0.11.0/server/jar
运行服务端以生成一些文件
java -jar fabric-server-mc.1.19-loader.0.14.8-launcher.0.11.0.jar nogui
出现Done说明服务器搭建成功
输入stop停止服务器
第四步:搭建MCDR 返回上层目录(MC)
cd ..
初始化MCDR环境
python -m mcdreforged init
启动MCDR
python -m mcdreforged
MCDR+Fabric服务端搭建成功
也可以看看 原版服务器设置文件Wiki</description>
    </item>
    
    <item>
      <title>使用GitHub Pages和Hugo搭建个人博客(Windows)</title>
      <link>https://bcyfo5u0v38t.github.io/posts/use_github_pages_and_hugo_to_build_a_personal_blog/</link>
      <pubDate>Sun, 17 Jul 2022 07:34:17 +0800</pubDate>
      
      <guid>https://bcyfo5u0v38t.github.io/posts/use_github_pages_and_hugo_to_build_a_personal_blog/</guid>
      <description>第一步:安装Hugo 从Github Releases页面下载 hugo_extended_xxx_Windows-64bit.zip
将压缩包解压到用户目录(防止权限问题)下并添加到环境变量Path中
重启后 使用hugo version命令验证安装是否成功
第二步:创建新站点 初始化一个hugo项目
hugo new site yourgithubusername.github.io
第三步:添加主题 从该页面选择自己心仪的主题 我当前使用的是m10c主题 进入该目录 并下载m10c主题
cd yourgithubusername.github.io git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c 将主题到站点配置(config.toml)中
theme = &amp;quot;m10c&amp;quot;
第四步:添加文章 创建一篇空文章
hugo new post/test.md
另外 需要将生成在文章(/content/post/test.md)头部的draft=true修改为draft=false 否则并不会生成草稿页面 更多信息
第五步:创建GitHub Pages项目并配置 创建一个新的 GitHub 项目 项目名称需要是 &amp;lt;yourgithubusername.github.io&amp;gt; 格式 配置Pages项目
第六步:生成静态页面并启动Hugo服务 生成静态页面之前需要修改 config.toml 文件中的 baseURL 配置 将其修改为个人站点 baseURL = &amp;quot;https://yourgithubusername.github.io&amp;quot; GitHub Pages目前只支持从根(root)或docs目录中的文件夹构建站点 hugo server -d docs
进入 http://localhost:1313/ 预览页面
第七步:上传Github Pages项目 git remote add origin git@github.</description>
    </item>
    
  </channel>
</rss>
